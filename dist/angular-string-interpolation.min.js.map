{"version":3,"sources":["webpack:///webpack/universalModuleDefinition?5ca6","webpack:///angular-string-interpolation.min.js","webpack:///webpack/bootstrap fd8669981d138e384d32?fe9e","webpack:///./src/index.js?9552","webpack:///./src/index.js?1f39*","webpack:///./src/interpolation.service.js?51bd","webpack:///./src/interpolation.service.js?be02*","webpack:///./src/interpolation.directive.js?a194","webpack:///./src/interpolation.directive.js?10e7*","webpack:///./src/interpolation.controller.js?8618","webpack:///./src/interpolation.controller.js?8a75*"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interpolation","_interpolation2","_interpolation3","angular","directive","InterpolationDirective","controller","InterpolationController","service","InterpolationService","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","text","array","convert","str","p1","regex","replace","restrict","scope","bindToController","bcString","bcArray","template","controllerAs","$scope","bcInterpolationService","_activate","$inject","_this","string","interpolate","$watch","newValue"],"mappings":"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","file":"angular-string-interpolation.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-string-interpolation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-string-interpolation\"] = factory();\n\telse\n\t\troot[\"angular-string-interpolation\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-string-interpolation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-string-interpolation\"] = factory();\n\telse\n\t\troot[\"angular-string-interpolation\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _interpolation = __webpack_require__(1);\n\t\n\tvar _interpolation2 = __webpack_require__(2);\n\t\n\tvar _interpolation3 = __webpack_require__(3);\n\t\n\tangular.module('bc.AngularStringInterpolation', []).directive('bcInterpolate', _interpolation2.InterpolationDirective).controller('InterpolationController', _interpolation3.InterpolationController).service('bcInterpolationService', _interpolation.InterpolationService);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar InterpolationService = exports.InterpolationService = function () {\n\t    function InterpolationService() {\n\t        'ngInject';\n\t\n\t        _classCallCheck(this, InterpolationService);\n\t    }\n\t\n\t    /**\n\t     * Interpolate text with items from an array\n\t     *\n\t     * @param {String} text Text that contains placeholders\n\t     * @return {String} text Interpolated text\n\t     */\n\t\n\t\n\t    _createClass(InterpolationService, [{\n\t        key: 'interpolate',\n\t        value: function interpolate(text, array) {\n\t            // Define a regex to look for our custom tag `${}`\n\t            var regex = /\\${(.*?)}/g;\n\t            // Cache the array length\n\t            var length = array.length;\n\t\n\t            // Loop through the array of replacement items\n\t            for (var i = 0; i < length; i += 1) {\n\t                // Replace each matched item\n\t                text = text.replace(regex, convert);\n\t            }\n\t\n\t            // Custom conversion function\n\t            function convert(str, p1) {\n\t                // Grab the content of the match (should be an index number)\n\t                // Return the array item with the found index\n\t                return array[p1];\n\t            }\n\t\n\t            return text;\n\t        }\n\t    }]);\n\t\n\t    return InterpolationService;\n\t}();\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\texports.InterpolationDirective = InterpolationDirective;\n\t\n\tvar _interpolation = __webpack_require__(3);\n\t\n\tfunction InterpolationDirective() {\n\t    'ngInject';\n\t\n\t    var directive = {\n\t        restrict: 'EA',\n\t        replace: true,\n\t        scope: {},\n\t        bindToController: {\n\t            bcString: '@',\n\t            bcArray: '='\n\t        },\n\t        template: '<span data-ng-bind=\"vm.string\"></span>',\n\t        controller: _interpolation.InterpolationController,\n\t        controllerAs: 'vm'\n\t    };\n\t\n\t    return directive;\n\t}\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar InterpolationController = exports.InterpolationController = function () {\n\t    InterpolationController.$inject = [\"$scope\", \"bcInterpolationService\"];\n\t    function InterpolationController($scope, bcInterpolationService) {\n\t        'ngInject';\n\t\n\t        _classCallCheck(this, InterpolationController);\n\t\n\t        this.$scope = $scope;\n\t        this.bcInterpolationService = bcInterpolationService;\n\t\n\t        this._activate();\n\t    }\n\t\n\t    _createClass(InterpolationController, [{\n\t        key: '_activate',\n\t        value: function _activate() {\n\t            var _this = this;\n\t\n\t            // Interpolated the string and expose to the DOM\n\t            this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n\t\n\t            // This watch is needed since the items being passed in may not exist yet (async data).\n\t            // This also allows us to dynamically re-interpolate if any of the array items change.\n\t            this.$scope.$watch('vm.bcArray', function (newValue) {\n\t                _this.string = _this.bcInterpolationService.interpolate(_this.bcString, _this.bcArray);\n\t            });\n\t        }\n\t    }]);\n\t\n\t    return InterpolationController;\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-string-interpolation.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap fd8669981d138e384d32\n **/","'use strict';\n\nvar _interpolation = require('./interpolation.service');\n\nvar _interpolation2 = require('./interpolation.directive');\n\nvar _interpolation3 = require('./interpolation.controller');\n\nangular.module('bc.AngularStringInterpolation', []).directive('bcInterpolate', _interpolation2.InterpolationDirective).controller('InterpolationController', _interpolation3.InterpolationController).service('bcInterpolationService', _interpolation.InterpolationService);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { InterpolationService } from './interpolation.service';\nimport { InterpolationDirective } from './interpolation.directive';\nimport { InterpolationController } from './interpolation.controller';\n\nangular.module('bc.AngularStringInterpolation', [])\n    .directive('bcInterpolate', InterpolationDirective)\n    .controller('InterpolationController', InterpolationController)\n    .service('bcInterpolationService', InterpolationService)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InterpolationService = exports.InterpolationService = function () {\n    function InterpolationService() {\n        'ngInject';\n\n        _classCallCheck(this, InterpolationService);\n    }\n\n    /**\n     * Interpolate text with items from an array\n     *\n     * @param {String} text Text that contains placeholders\n     * @return {String} text Interpolated text\n     */\n\n\n    _createClass(InterpolationService, [{\n        key: 'interpolate',\n        value: function interpolate(text, array) {\n            // Define a regex to look for our custom tag `${}`\n            var regex = /\\${(.*?)}/g;\n            // Cache the array length\n            var length = array.length;\n\n            // Loop through the array of replacement items\n            for (var i = 0; i < length; i += 1) {\n                // Replace each matched item\n                text = text.replace(regex, convert);\n            }\n\n            // Custom conversion function\n            function convert(str, p1) {\n                // Grab the content of the match (should be an index number)\n                // Return the array item with the found index\n                return array[p1];\n            }\n\n            return text;\n        }\n    }]);\n\n    return InterpolationService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.service.js\n **/","export class InterpolationService {\n\n    constructor() {\n        'ngInject';\n    }\n\n\n\n    /**\n     * Interpolate text with items from an array\n     *\n     * @param {String} text Text that contains placeholders\n     * @return {String} text Interpolated text\n     */\n    interpolate(text, array) {\n        // Define a regex to look for our custom tag `${}`\n        const regex = /\\${(.*?)}/g;\n        // Cache the array length\n        const length = array.length;\n\n        // Loop through the array of replacement items\n        for (let i = 0; i < length; i += 1) {\n            // Replace each matched item\n            text = text.replace(regex, convert)\n        }\n\n        // Custom conversion function\n        function convert(str, p1) {\n            // Grab the content of the match (should be an index number)\n            // Return the array item with the found index\n            return array[p1];\n        }\n\n        return text;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InterpolationDirective = InterpolationDirective;\n\nvar _interpolation = require('./interpolation.controller');\n\nfunction InterpolationDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'EA',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcString: '@',\n            bcArray: '='\n        },\n        template: '<span data-ng-bind=\"vm.string\"></span>',\n        controller: _interpolation.InterpolationController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.directive.js\n **/","import { InterpolationController } from './interpolation.controller';\n\nexport function InterpolationDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'EA',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcString: '@',\n            bcArray: '=',\n        },\n        template: '<span data-ng-bind=\"vm.string\"></span>',\n        controller: InterpolationController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InterpolationController = exports.InterpolationController = function () {\n    function InterpolationController($scope, bcInterpolationService) {\n        'ngInject';\n\n        _classCallCheck(this, InterpolationController);\n\n        this.$scope = $scope;\n        this.bcInterpolationService = bcInterpolationService;\n\n        this._activate();\n    }\n\n    _createClass(InterpolationController, [{\n        key: '_activate',\n        value: function _activate() {\n            var _this = this;\n\n            // Interpolated the string and expose to the DOM\n            this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n\n            // This watch is needed since the items being passed in may not exist yet (async data).\n            // This also allows us to dynamically re-interpolate if any of the array items change.\n            this.$scope.$watch('vm.bcArray', function (newValue) {\n                _this.string = _this.bcInterpolationService.interpolate(_this.bcString, _this.bcArray);\n            });\n        }\n    }]);\n\n    return InterpolationController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.controller.js\n **/","export class InterpolationController {\n\n    constructor(\n        $scope,\n        bcInterpolationService\n    ) {\n        'ngInject';\n\n        this.$scope = $scope;\n        this.bcInterpolationService = bcInterpolationService;\n\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Interpolated the string and expose to the DOM\n        this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n\n        // This watch is needed since the items being passed in may not exist yet (async data).\n        // This also allows us to dynamically re-interpolate if any of the array items change.\n        this.$scope.$watch('vm.bcArray', (newValue) => {\n            this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n        });\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.controller.js\n **/"],"sourceRoot":""}