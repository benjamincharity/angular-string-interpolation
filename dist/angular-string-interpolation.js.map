{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 62f16424ce698e85d3cd","webpack:///./src/index.js","webpack:///./src/index.js?1f39","webpack:///./src/interpolation.service.js","webpack:///./src/interpolation.service.js?be02","webpack:///./src/interpolation.directive.js","webpack:///./src/interpolation.directive.js?10e7","webpack:///./src/interpolation.controller.js","webpack:///./src/interpolation.controller.js?8a75","webpack:///./src/interpolation.filter.js","webpack:///./src/interpolation.filter.js?5af4"],"names":[],"mappings":"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","file":"angular-string-interpolation.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"angular-string-interpolation\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"angular-string-interpolation\"] = factory();\n\telse\n\t\troot[\"angular-string-interpolation\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 62f16424ce698e85d3cd\n **/","'use strict';\n\nvar _interpolation = require('./interpolation.service');\n\nvar _interpolation2 = require('./interpolation.directive');\n\nvar _interpolation3 = require('./interpolation.controller');\n\nvar _interpolation4 = require('./interpolation.filter');\n\nangular.module('bc.AngularStringInterpolation', []).directive('bcInterpolate', _interpolation2.InterpolationDirective).controller('InterpolationController', _interpolation3.InterpolationController).filter('bcInterpolation', _interpolation4.InterpolationFilter).service('bcInterpolationService', _interpolation.InterpolationService);\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.js\n **/","import { InterpolationService } from './interpolation.service';\nimport { InterpolationDirective } from './interpolation.directive';\nimport { InterpolationController } from './interpolation.controller';\nimport { InterpolationFilter } from './interpolation.filter';\n\nangular.module('bc.AngularStringInterpolation', [])\n    .directive('bcInterpolate', InterpolationDirective)\n    .controller('InterpolationController', InterpolationController)\n    .filter('bcInterpolation', InterpolationFilter)\n    .service('bcInterpolationService', InterpolationService)\n;\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/index.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InterpolationService = exports.InterpolationService = function () {\n    function InterpolationService() {\n        'ngInject';\n\n        _classCallCheck(this, InterpolationService);\n    }\n\n    /**\n     * Interpolate text with items from an array\n     *\n     * @param {String} text Text that contains placeholders\n     * @return {String} text Interpolated text\n     */\n\n\n    _createClass(InterpolationService, [{\n        key: 'interpolate',\n        value: function interpolate(text, array) {\n            // Define a regex to look for our custom tag `${}`\n            var regex = /\\${(.*?)}/g;\n            // Cache the array length\n            var length = array.length;\n\n            // Loop through the array of replacement items\n            for (var i = 0; i < length; i += 1) {\n                // Replace each matched item\n                text = text.replace(regex, convert);\n            }\n\n            // Custom conversion function\n            function convert(str, p1) {\n                // Grab the content of the match (should be an index number)\n                // Return the array item with the found index\n                return array[p1];\n            }\n\n            return text;\n        }\n    }]);\n\n    return InterpolationService;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.service.js\n **/","export class InterpolationService {\n\n    constructor() {\n        'ngInject';\n    }\n\n\n\n    /**\n     * Interpolate text with items from an array\n     *\n     * @param {String} text Text that contains placeholders\n     * @return {String} text Interpolated text\n     */\n    interpolate(text, array) {\n        // Define a regex to look for our custom tag `${}`\n        const regex = /\\${(.*?)}/g;\n        // Cache the array length\n        const length = array.length;\n\n        // Loop through the array of replacement items\n        for (let i = 0; i < length; i += 1) {\n            // Replace each matched item\n            text = text.replace(regex, convert);\n        }\n\n        // Custom conversion function\n        function convert(str, p1) {\n            // Grab the content of the match (should be an index number)\n            // Return the array item with the found index\n            return array[p1];\n        }\n\n        return text;\n    }\n\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.service.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InterpolationDirective = InterpolationDirective;\n\nvar _interpolation = require('./interpolation.controller');\n\nfunction InterpolationDirective() {\n    'ngInject';\n\n    var directive = {\n        restrict: 'EA',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcString: '@',\n            bcArray: '='\n        },\n        template: '<span data-ng-bind=\"vm.string\"></span>',\n        controller: _interpolation.InterpolationController,\n        controllerAs: 'vm'\n    };\n\n    return directive;\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.directive.js\n **/","import { InterpolationController } from './interpolation.controller';\n\nexport function InterpolationDirective(\n) {\n    'ngInject';\n\n    const directive = {\n        restrict: 'EA',\n        replace: true,\n        scope: {},\n        bindToController: {\n            bcString: '@',\n            bcArray: '=',\n        },\n        template: '<span data-ng-bind=\"vm.string\"></span>',\n        controller: InterpolationController,\n        controllerAs: 'vm',\n    };\n\n    return directive;\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.directive.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InterpolationController = exports.InterpolationController = function () {\n    function InterpolationController($scope, bcInterpolationService) {\n        'ngInject';\n\n        _classCallCheck(this, InterpolationController);\n\n        this.$scope = $scope;\n        this.bcInterpolationService = bcInterpolationService;\n\n        this._activate();\n    }\n\n    _createClass(InterpolationController, [{\n        key: '_activate',\n        value: function _activate() {\n            var _this = this;\n\n            // Interpolated the string and expose to the DOM\n            this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n\n            // This watch is needed since the items being passed in may not exist yet (async data).\n            // This also allows us to dynamically re-interpolate if any of the array items change.\n            this.$scope.$watch('vm.bcArray', function (newValue) {\n                _this.string = _this.bcInterpolationService.interpolate(_this.bcString, _this.bcArray);\n            });\n        }\n    }]);\n\n    return InterpolationController;\n}();\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.controller.js\n **/","export class InterpolationController {\n\n    constructor(\n        $scope,\n        bcInterpolationService\n    ) {\n        'ngInject';\n\n        this.$scope = $scope;\n        this.bcInterpolationService = bcInterpolationService;\n\n\n        this._activate();\n\n    }\n\n\n\n\n    _activate() {\n        // Interpolated the string and expose to the DOM\n        this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n\n        // This watch is needed since the items being passed in may not exist yet (async data).\n        // This also allows us to dynamically re-interpolate if any of the array items change.\n        this.$scope.$watch('vm.bcArray', (newValue) => {\n            this.string = this.bcInterpolationService.interpolate(this.bcString, this.bcArray);\n        });\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.controller.js\n **/","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.InterpolationFilter = InterpolationFilter;\nfunction InterpolationFilter(bcInterpolationService) {\n    'ngInject';\n\n    return interpolate;\n\n    /**\n     * Interpolate a string\n     *\n     * @param {String} string Text to interpolate\n     * @param {Array} values Values to inject into placeholders\n     * @return {String} output\n     */\n    function interpolate(string, values) {\n        return bcInterpolationService.interpolate(string, values);\n    }\n}\n\n\n/** WEBPACK FOOTER **\n ** ./src/interpolation.filter.js\n **/","export function InterpolationFilter(\n    bcInterpolationService\n) {\n    'ngInject';\n\n    return interpolate;\n\n\n    /**\n     * Interpolate a string\n     *\n     * @param {String} string Text to interpolate\n     * @param {Array} values Values to inject into placeholders\n     * @return {String} output\n     */\n    function interpolate(string, values) {\n        return bcInterpolationService.interpolate(string, values);\n    }\n\n}\n\n\n\n\n/** WEBPACK FOOTER **\n ** ./~/eslint-loader!./src/interpolation.filter.js\n **/"],"sourceRoot":""}